// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  username   String   @unique
  email      String   @unique
  password   String
  avatar     String?  // avatar url
  bio        String? 
  drawings   Drawing[] 
  comments   Comment[]
  likes      Like[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Drawing {
  id         String   @id @default(uuid())
  title      String
  imageUrl   String
  description String?
  artistId   String
  artist     User     @relation(fields: [artistId], references: [id], onDelete: Cascade)
  comments   Comment[]
  likes      Like[]
  createdAt  DateTime @default(now())
}

model Comment {
  id         String   @id @default(uuid())
  text       String
  authorId   String
  drawingId  String
  author     User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  drawing    Drawing  @relation(fields: [drawingId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
}

model Like {
  id         String   @id @default(uuid())
  userId     String
  drawingId  String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  drawing    Drawing  @relation(fields: [drawingId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
}